# The prefix used to uniquely identify this session. This will be prepended to all output directory and filenames. A copy of the config YAML file used to generate the results of a session will have this prefix and be saved with the output. The default prefix is a timestamp in YYYYMMDDHHSS_ format, created when the script is initialized.
results_prefix: default

# The filepath to a directory of .pdb structure files to be analyzed. It is recommended that the absolute filepath is used.
input_filepath: ../input/

# The filepath to the directory where results should be saved.
output_filepath: ../output/

# Filepath to a custom .json file. Use `Null` if you wish to use the default .json included in the beta_mining module.
custom_json: Null

# units in which to calculate dihedral angles. Enter "radians" or "degrees"
units: degrees

# The desired output filename for hits, only relevant if `hits_fasta` or `hits_aa` indicated as a desired output below under `save_files`.
output_filename: beta_mining_hits

# A list of which structures to target in a run.
target_names:
  - beta-run
  - sextuple-helix

# A list of desired outputs. "fasta" indicates the desire for all information and sequence hits in a fasta file, "hits_aa" will also output a large datatable of every residue in every hit sequence, proteome_aa will output individual datatables of all calculations for each protein structure file, regardless of hit status. This can be useful for figuring out why a certain protein is or is not classified as a hit.
save_files:
  - hits_fasta
  - hits_aa
  - proteome_aa

# Indicate the order to apply the inclusion/exclusion criteria for targets.
conditions:
  - include
  - exclude

# Indicate addtional fields for hit attributes that should be reported in the output. The attribute name must appear in the dataframe generated from the PDB structure file, and the calculation to be performed must be an available function in the Python math module.
additional_attributes:
  twist: [mean]
  plddt: [mean, min, max]
  residue_number: [min, max]
  absolute_residue_number: [min, max]
